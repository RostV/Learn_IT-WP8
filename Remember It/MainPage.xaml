<phone:PhoneApplicationPage
    x:Class="Remember_It.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:phone="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone"
    xmlns:toolkit="clr-namespace:Microsoft.Phone.Controls;assembly=Microsoft.Phone.Controls.Toolkit"
    xmlns:shell="clr-namespace:Microsoft.Phone.Shell;assembly=Microsoft.Phone"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d"
    FontFamily="{StaticResource PhoneFontFamilyNormal}"
    FontSize="{StaticResource PhoneFontSizeNormal}"
    Foreground="{StaticResource PhoneForegroundBrush}"
    SupportedOrientations="Portrait"  Orientation="Portrait"
    shell:SystemTray.IsVisible="False">
	<phone:PhoneApplicationPage.Resources>
        <Style x:Key="ButtonPressedTransparent" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
            <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}"/>
            <Setter Property="Padding" Value="10,5,10,6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="{StaticResource PhoneTouchTargetOverhang}">
                                <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="AppButtonPressed" TargetType="Button">
            <Setter Property="Background" Value="Transparent"/>
            <Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
            <Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
            <Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
            <Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}"/>
            <Setter Property="Padding" Value="10,5,10,6"/>
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="Button">
                        <Grid Background="Transparent">
                            <VisualStateManager.VisualStateGroups>
                                <VisualStateGroup x:Name="CommonStates">
                                    <VisualState x:Name="Normal"/>
                                    <VisualState x:Name="MouseOver"/>
                                    <VisualState x:Name="Pressed">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="White"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Black"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                    <VisualState x:Name="Disabled">
                                        <Storyboard>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
                                                <DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </VisualState>
                                </VisualStateGroup>
                            </VisualStateManager.VisualStateGroups>
                            <Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="0" Margin="{StaticResource PhoneTouchTargetOverhang}">
                                <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}"/>
                            </Border>
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style x:Key="roundButton" TargetType="Button">
        	<Setter Property="Background" Value="Transparent"/>
        	<Setter Property="BorderBrush" Value="{StaticResource PhoneForegroundBrush}"/>
        	<Setter Property="Foreground" Value="{StaticResource PhoneForegroundBrush}"/>
        	<Setter Property="BorderThickness" Value="{StaticResource PhoneBorderThickness}"/>
        	<Setter Property="FontFamily" Value="{StaticResource PhoneFontFamilySemiBold}"/>
        	<Setter Property="FontSize" Value="{StaticResource PhoneFontSizeMedium}"/>
        	<Setter Property="Padding" Value="10,5,10,6"/>
        	<Setter Property="Template">
        		<Setter.Value>
        			<ControlTemplate TargetType="Button">
        				<Grid Background="Transparent">
        					<VisualStateManager.VisualStateGroups>
        						<VisualStateGroup x:Name="CommonStates">
        							<VisualState x:Name="Normal"/>
        							<VisualState x:Name="MouseOver"/>
        							<VisualState x:Name="Pressed">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneButtonBasePressedForegroundBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneAccentBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        							<VisualState x:Name="Disabled">
        								<Storyboard>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Foreground" Storyboard.TargetName="ContentContainer">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="BorderBrush" Storyboard.TargetName="ButtonBackground">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="{StaticResource PhoneDisabledBrush}"/>
        									</ObjectAnimationUsingKeyFrames>
        									<ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="Background" Storyboard.TargetName="ButtonBackground">
        										<DiscreteObjectKeyFrame KeyTime="0" Value="Transparent"/>
        									</ObjectAnimationUsingKeyFrames>
        								</Storyboard>
        							</VisualState>
        						</VisualStateGroup>
        					</VisualStateManager.VisualStateGroups>
        					<Border x:Name="ButtonBackground" BorderBrush="{TemplateBinding BorderBrush}" BorderThickness="{TemplateBinding BorderThickness}" Background="{TemplateBinding Background}" CornerRadius="33" Margin="{StaticResource PhoneTouchTargetOverhang}">
                                <ContentControl x:Name="ContentContainer" ContentTemplate="{TemplateBinding ContentTemplate}" Content="{TemplateBinding Content}" RenderTransformOrigin="0.5,0.5" Foreground="{TemplateBinding Foreground}" HorizontalContentAlignment="{TemplateBinding HorizontalContentAlignment}" Padding="{TemplateBinding Padding}" VerticalContentAlignment="{TemplateBinding VerticalContentAlignment}">
                                    <ContentControl.RenderTransform>
                                        <ScaleTransform x:Name="buttonScale"/>
                                    </ContentControl.RenderTransform>
                                </ContentControl>
                            </Border>
        				</Grid>
        			</ControlTemplate>
        		</Setter.Value>
        	</Setter>
        </Style>
    </phone:PhoneApplicationPage.Resources>
	
    <!--LayoutRoot представляет корневую сетку, где размещается все содержимое страницы-->
    <Grid x:Name="LayoutRoot" Background="Transparent">
        <!-- ПРИМЕЧАНИЕ О ЛОКАЛИЗАЦИИ:
            Чтобы локализовать отображаемые строки, скопируйте их значения в соответствующим образом названные
            ключи в файле ресурсов нейтрального языка приложения (AppResources.resx), а затем
            замените жестко заданное текстовое значение между кавычками атрибутов
            на выражение привязки, указывающее на имя соответствующей строки.

            Пример:

                Text="{Binding Path=LocalizedResources.ApplicationTitle, Source={StaticResource LocalizedStrings}}"

            Данная привязка указывает на строковый ресурс шаблона с именем "ApplicationTitle".

            Добавление поддерживаемых языков на вкладку "Свойства проекта" создает
            новый RESX-файл для каждого языка, в котором могут храниться переведенные значения
            строк пользовательского интерфейса. Привязка в этих примерах вызывает отрисовку
            значений атрибутов из RESX-файла, соответствующего
            CurrentUICulture приложения во время выполнения.
         -->

        <!--Элемент управления Panorama-->
        <phone:Pivot Name="MainPivot" Title="Learn it" SelectionChanged="MainPivot_SelectionChanged">
            <phone:Pivot.Background>
                <ImageBrush ImageSource="/Assets/PivotBackground.png"/>
            </phone:Pivot.Background>

            <!--Первый элемент Panorama-->
            <phone:PivotItem Name="StudingSection">
                <phone:PivotItem.Header>
                    <Grid Width="250">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding studyDeck.DeckName, Mode=OneWay}" Name="StTBlock"/>
                        <TextBlock Text="{Binding studyDeck.DeckDescription, Mode=OneWay}" Margin="20,-20,0,0" Grid.Row="1" FontSize="20" />
                    </Grid>
                </phone:PivotItem.Header>
                <!--Однострочный список с разбивкой текста на строки-->
                <Grid>
                    <Border BorderThickness="1" BorderBrush="Black" Name="resultBorder" Visibility="Collapsed" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,-100,0,0">
                        <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock Text="{Binding Path=LocalizedResources.ResultBorder_result, Source={StaticResource LocalizedStrings}}" FontSize="42"/>
                                <TextBlock Name="resultBorder_resultPercent" FontSize="42" />
                            </StackPanel>
                            <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                <TextBlock Text="{Binding Path=LocalizedResources.ResultBorder_true, Source={StaticResource LocalizedStrings}}" FontSize="36"/>
                                <TextBlock Name="resultBorder_answTrue" FontSize="36"/>
                            </StackPanel>
                            <Button Width="100" Content="Ok" Name="resultBorder_OKBtn" Click="resultBorder_OKBtn_Click"/>
                        </StackPanel>
                    </Border>
                    <StackPanel VerticalAlignment="Center" HorizontalAlignment="Center">
                        <Border Margin="0,-100,0,0" Name="settingsField" BorderThickness="1" BorderBrush="Black" Visibility="Collapsed">
                            <StackPanel>
                                <TextBlock HorizontalAlignment="Center" FontSize="42" Text="{Binding Path=LocalizedResources.SettingsField_Label, Source={StaticResource LocalizedStrings}}" />
                                <StackPanel Orientation="Horizontal">
                                    <StackPanel>
                                        <RadioButton Content="{Binding Path=LocalizedResources.SettingsField_FrontSide, Source={StaticResource LocalizedStrings}}" GroupName="switchSide" Name="radBtnFrontSide" Checked="frontSide_checked"/>
                                        <RadioButton Margin="0,-20,0,0" Content="{Binding Path=LocalizedResources.SettingsField_BackSide, Source={StaticResource LocalizedStrings}}" GroupName="switchSide" Checked="backSide_checked"/>
                                    </StackPanel>
                                    <StackPanel>
                                        <RadioButton Content="{Binding Path=LocalizedResources.SettingsField_Random, Source={StaticResource LocalizedStrings}}" GroupName="switchRandom" Name="radBtnRandom" Checked="Random_checked" />
                                        <RadioButton Content="{Binding Path=LocalizedResources.SettingsField_OneByOne, Source={StaticResource LocalizedStrings}}" Margin="0,-20,0,0" GroupName="switchRandom" />
                                    </StackPanel>
                                </StackPanel>
                                <Button Content="Ok" Click="SettingsOk_Click" Width="200"/>
                            </StackPanel>                                          
                        </Border>                      
                    </StackPanel>
                    <StackPanel x:Name="studingField" Visibility="Visible">
                        <StackPanel Orientation="Horizontal">
                                <ProgressBar x:Name="AnswerPB" Width="350" RenderTransformOrigin="0.5,0.5"  HorizontalAlignment="Left">
                                    <ProgressBar.RenderTransform>
                                        <CompositeTransform ScaleY="3"/>
                                    </ProgressBar.RenderTransform>
                                </ProgressBar>
                            <TextBlock Name="countAnsCards" Text="" FontSize="24" />
                        </StackPanel>                        
                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Right">
                            <StackPanel>
                                <Grid Margin="0,0,0,0" Height="200" Width="300">
                                    <Image Source="/Assets/BackCard.png" Visibility="Visible" Name="qBack"/>
                                    <Image Source="/Assets/FrontCard.png" Visibility="Collapsed" Name="qFront"/>
                                    <Border Margin="-5,-10,0,0" Height="155" Width="260">
                                        <TextBlock x:Name="QuestionTB" FontSize="30" TextWrapping="Wrap"  Text="{Binding curCard.CardFrontSide}" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                    </Border>
                                </Grid>
                                <Grid Height="55" Margin="0,20,0,0">
                                    <Image Source="Assets/TrueOrFalse/True.png" Height="55" Name="imgTrue" Opacity="0"/>
                                    <Image Source="Assets/TrueOrFalse/False.png" Height="55" Name="imgFalse" Opacity="0" />
                                    <Grid.Resources>
                                        <Storyboard x:Name="appearanceTrue" >
                                            <DoubleAnimation
                                            Storyboard.TargetName="imgTrue" 
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.0" To="1.0" Duration="0:0:0.5" 
                                            AutoReverse="True"/>
                                        </Storyboard>
                                        <Storyboard x:Name="appearanceFalse" >
                                            <DoubleAnimation
                                            Storyboard.TargetName="imgFalse" 
                                            Storyboard.TargetProperty="Opacity"
                                            From="0.0" To="1.0" Duration="0:0:0.5" 
                                            AutoReverse="True"/>
                                        </Storyboard>
                                    </Grid.Resources>
                                </Grid>
                                
                                <Grid Width="285" Height="180" Margin="-5,30,0,0">
                                    <Rectangle Stretch="Fill" RadiusX="15" RadiusY="15" StrokeDashArray="7, 2" Stroke="Black" Fill="Transparent" Tap="ansTbBorder_tap"/>
                                    <Border Width="285" Height="180" >
                                        <TextBox x:Name="AnswerTB" TextWrapping="Wrap" TextAlignment="Center" VerticalAlignment="Center" HorizontalAlignment="Center" BorderThickness="0" Background="Transparent"/>
                                    </Border>
                                </Grid>
                            </StackPanel>  
                            <Button Height="72" Width="72" Margin="0,15,0,0" BorderThickness="3" Style="{StaticResource roundButton}" Click="AnswerBtn_Click" >
                                <Image Width="42" Height="42" Margin="-10,-5,0,0" Source="/Assets/AppBarButtons/next.png"/>
                            </Button>
                        </StackPanel>                                           
                    </StackPanel>
                    <StackPanel x:Name="ifNoDeckField" VerticalAlignment="Center" Margin="0,-50,0,0" Visibility="Collapsed"> 
                        <TextBlock FontSize="30" HorizontalAlignment="Center" Text="You have not created any deck."/>
                        <Button Content="Create" Width="150" Click="ifNoDeckFieldBtn_Click" />
                    </StackPanel>
                </Grid>
                
            </phone:PivotItem>

            <!--Второй элемент Panorama-->
            <phone:PivotItem Header="{Binding Path=LocalizedResources.Decks, Source={StaticResource LocalizedStrings}}" Name="DeckSection">
                <!--Двухстрочный список с заполнителем изображения и разбивкой текста на строки на базе плавающего заголовка, в котором проматывается содержимое-->
                <ListBox Height="584" VerticalAlignment="Top" Name="deckList" toolkit:TiltEffect.IsTiltEnabled="True" Margin="0,-25,-22,2" ItemsSource="{Binding DeckItems}" SelectionChanged="deckList_SelectionChanged">
                    <ListBox.ItemTemplate>        
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Margin="12,2,0,4" Height="105" Width="432">
                                <toolkit:ContextMenuService.ContextMenu>
                                    <toolkit:ContextMenu x:Name="MenuDeckList" IsZoomEnabled="False" Background="White" BorderBrush="Black">
                                        <toolkit:MenuItem Header="{Binding Path=LocalizedResources.MenuItemDelete, Source={StaticResource LocalizedStrings}}" x:Name="deleteDeck" Foreground="Black" Click="deleteDeck_Click"/>
                                        <toolkit:MenuItem Header="{Binding Path=LocalizedResources.MenuItemGoTest, Source={StaticResource LocalizedStrings}}" x:Name="goTest" Foreground="Black" Click="goTest_Click"/>
                                        <toolkit:MenuItem Header="{Binding Path=LocalizedResources.MenuItemGoStudy, Source={StaticResource LocalizedStrings}}" x:Name="goStudy" Foreground="Black" Click="goStudy_Click"/>
                                    </toolkit:ContextMenu>
                                </toolkit:ContextMenuService.ContextMenu>
                                <Grid>
                                    <Image Source="/Assets/Deck.png" Width="99" Height="99"/>
                                    <TextBlock TextAlignment="Center" Foreground="Black" Margin="0,20,0,0" Width="69" Height="39" TextWrapping="Wrap" Text="{Binding cardsCount}" FontSize="14"/>
                                </Grid>
                                <StackPanel Width="311" Margin="8,-7,0,0">
                                    <TextBlock Foreground="Black" Text="{Binding DeckName}" TextWrapping="Wrap" Margin="10,0" Style="{StaticResource PhoneTextExtraLargeStyle}" FontSize="{StaticResource PhoneFontSizeLarge}" />
                                    <TextBlock Foreground="Gray" Text="{Binding DeckDescription}" TextWrapping="Wrap" Margin="10,-2,10,0" Style="{StaticResource PhoneTextSubtleStyle}" />
                                </StackPanel>
                            </StackPanel>
                            
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </phone:PivotItem>

            <!--Третий элемент Panorama-->
            <phone:PivotItem Name="CardSection">
                <phone:PivotItem.Header>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="330"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding Path=LocalizedResources.Cards, Source={StaticResource LocalizedStrings}}"/>
                        <Button Visibility="Collapsed" Grid.Column="1" Grid.RowSpan="2" BorderThickness="0" Style="{StaticResource ButtonPressedTransparent}" Click="Find_Click">
                            <Image Source="/Assets/AppBarButtons/feature.search.png"/>
                        </Button>
                        <TextBlock Name="deckShow" Margin="20,-20,0,0" Grid.Row="1" FontSize="20" />
                    </Grid>
                </phone:PivotItem.Header>
                <ListBox Height="584" VerticalAlignment="Top" Margin="0,-25,-22,0" ItemsSource="{Binding CardItems}" Name="cardsList" SelectionChanged="cardsList_SelectionChanged" ScrollViewer.VerticalScrollBarVisibility="Visible">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <StackPanel Orientation="Horizontal" Margin="12,2,0,4" Height="220">
                                <Grid>
                                    <Grid x:Name="cardBack" Height="200" Width="300" Visibility="{Binding visualBackSide, Mode=TwoWay}">
                                        <Image Source="/Assets/BackCard.png"/>
                                        <TextBox BorderThickness="0" GotFocus="GFcardSide" LostFocus="LFcardSide" Background="Transparent" BorderBrush="Transparent" TextWrapping="Wrap" Margin="-5,-5,0,0" Height="180" Width="285" Text="{Binding CardFrontSide, Mode=TwoWay}" TextAlignment="Center" />
                                        <Grid.Projection>
                                            <PlaneProjection/>
                                        </Grid.Projection>
                                    </Grid>
                                    <Grid x:Name="cardFront" Height="200" Width="300" Visibility="{Binding visualFrontSide, Mode=TwoWay}">
                                        <Image Source="/Assets/FrontCard.png"/>
                                        <TextBox BorderThickness="0" GotFocus="GFcardSide" LostFocus="LFcardSide" Background="Transparent" BorderBrush="Transparent" TextWrapping="Wrap" Margin="-5,-5,0,0" Height="180" Width="285" Text="{Binding CardBackSide, Mode=TwoWay}" TextAlignment="Center" />
                                        <Grid.Projection>
                                            <PlaneProjection/>
                                        </Grid.Projection>
                                    </Grid>
                                    <Grid.Resources>
                                        <Storyboard x:Name="flipTo" >
                                            <PointAnimation Duration="0:0:0.2" To="0.5,0.5" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="cardBack" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="90" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="cardBack" d:IsOptimized="True"/>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="cardFront">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-90"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="cardFront">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="cardBack">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                        <Storyboard x:Name="flipFrom">
                                            <PointAnimation Duration="0:0:0.2" To="0.5,0.5" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)" Storyboard.TargetName="cardFront" d:IsOptimized="True"/>
                                            <DoubleAnimation Duration="0:0:0.2" To="90" Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="cardFront" d:IsOptimized="True"/>
                                            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Projection).(PlaneProjection.RotationY)" Storyboard.TargetName="cardBack">
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.2" Value="-90"/>
                                                <EasingDoubleKeyFrame KeyTime="0:0:0.4" Value="0"/>
                                            </DoubleAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="cardBack">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Visible</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                            <ObjectAnimationUsingKeyFrames Storyboard.TargetProperty="(UIElement.Visibility)" Storyboard.TargetName="cardFront">
                                                <DiscreteObjectKeyFrame KeyTime="0:0:0.2">
                                                    <DiscreteObjectKeyFrame.Value>
                                                        <Visibility>Collapsed</Visibility>
                                                    </DiscreteObjectKeyFrame.Value>
                                                </DiscreteObjectKeyFrame>
                                            </ObjectAnimationUsingKeyFrames>
                                        </Storyboard>
                                    </Grid.Resources>
                                </Grid>
                                <StackPanel>
                                    <Button toolkit:TiltEffect.IsTiltEnabled="True" BorderThickness="0" Click="DeleteCard_Click" Style="{StaticResource ButtonPressedTransparent}">
                                        <Image Source="/Assets/AppBarButtons/delete.png"/>
                                    </Button>
                                    <Button toolkit:TiltEffect.SuppressTilt="True" BorderThickness="0" Click="FlipCard_Click" Style="{StaticResource ButtonPressedTransparent}">
                                        <Image Source="/Assets/AppBarButtons/refresh.png"/>
                                    </Button>
                                </StackPanel>

                            </StackPanel>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </phone:PivotItem>
        </phone:Pivot>
        <Grid Name="createpanel" Visibility="Collapsed" Margin="0,200,0,0" Width="360" Height="400" Background="#33000000">
            <StackPanel>
                <TextBox Name="deckNameTB" BorderBrush="#99000000" Text="{Binding Path=LocalizedResources.TBDeckName, Source={StaticResource LocalizedStrings}}" TextAlignment="Center" GotFocus="deckNameTB_GotFocus" LostFocus="deckNameTB_LostFocus"/>
                <TextBox Name="deckDescriptionTB" BorderBrush="#99000000" Text="{Binding Path=LocalizedResources.TBDeckDescription, Source={StaticResource LocalizedStrings}}" TextAlignment="Center" Height="250" GotFocus="deckDescriptionTB_GotFocus" LostFocus="deckDescriptionTB_LostFocus"/>
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <Button Content="{Binding Path=LocalizedResources.BtnCreate, Source={StaticResource LocalizedStrings}}" Width="135" Height="72" Name="createBtn" Click="createBtn_Click"/>
                    <Button Content="{Binding Path=LocalizedResources.BtnCancel, Source={StaticResource LocalizedStrings}}" Width="135" Height="72" Name="cancelBtn" Click="cancelBtn_Click"/>
                </StackPanel>

            </StackPanel>
        </Grid>
        <!--Раскомментируйте, чтобы увидеть сетку выравнивания и выровнять
            элементы управления по общим границам.  Верхнее поле изображения равно -32 пикселя, чтобы
            осталось место для области уведомлений. Установите его равным 0 (или вообще удалите поле),
            если область уведомлений скрыта.

            Перед сдачей приложения удалите этот код XAML и само изображение.-->
        <!--<Image Source="/Assets/AlignmentGrid.png" VerticalAlignment="Top" Height="800" Width="480" Margin="0" Grid.Row="0" Grid.RowSpan="2" IsHitTestVisible="False" />-->

    </Grid>
    <phone:PhoneApplicationPage.ApplicationBar>
        <shell:ApplicationBar IsVisible="True" IsMenuEnabled="True" Opacity="0">
            <shell:ApplicationBarIconButton IconUri="/Assets/AppBarButtons/add.png" x:Name="NewDeck" Text="new deck"/>
        </shell:ApplicationBar>
    </phone:PhoneApplicationPage.ApplicationBar>
</phone:PhoneApplicationPage>